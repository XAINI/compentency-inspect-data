# 判断题
- kind: bool
  content: Java程序中的起始类名称必须与存放该类的文件名相同。（）
  content_format: text
  answer: true

- kind: bool
  content: Unicode是用16位来表示一个字的。（）
  content_format: text
  answer: true

- kind: bool
  content: 原生类中的数据类型均可任意转换。（）
  content_format: text
  answer: false

# 单选题
- kind: single_choice
  content: 在单一文件中import、class和package的正确出现顺序是：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: package, import, class 
      - id: bbb
        text: class, import, package
      - id: ccc
        text: import, package, class
      - id: ddd
        text: package, class, import
    correct: aaa

- kind: single_choice
  content: |
    编译，运行下列代码后的结果是：
    ```java
    public class Test { 
      public static void main (String args []) { 
        int age; 
        age = age + 1; 
        System.out.println("The age is " + age); 
      } 
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译，运行后没有输出
      - id: bbb
        text: 编译，运行后输出：The age is 1
      - id: ccc
        text: 能通过编译，但运行时产生错误
      - id: ddd
        text: 不能通过编译
    correct: ddd

- kind: single_choice
  content: 内部数据类型byte的取值范围是
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 0 - 65, 535
      - id: bbb
        text: (–128) – 127 
      - id: ccc
        text: (–32,768) – 32,767 
      - id: ddd
        text: (–256) – 255 
    correct: bbb

- kind: single_choice
  content: 声明公用的abstract方法的正确格式是
  content_format: text
  answer:
    choices:
      - id: aaa
        text: public abstract void add();
      - id: bbb
        text: public abstract void add() {}
      - id: ccc
        text: public abstract add();
      - id: ddd
        text: public virtual add();
    correct: aaa

- kind: single_choice
  content: |
    下面的代码能打印出的结果为：
    ```java
      int i=1; 
      switch (i) { 
        case 0: 
          System.out.println("zero"); 
          break; 
        case 1: 
          System.out.println("one"); 
        case 2: 
          System.out.println("two"); 
        default: 
          System.out.println("default"); 
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: one
      - id: bbb
        text: one, default
      - id: ccc
        text: one, two, default
      - id: ddd
        text: default
    correct: ccc

- kind: single_choice
  content: |
    下面的代码能打印出的结果为：
    ```java
      int i=9; 
      switch (i) { 
        default: 
          System.out.println("default"); 
        case 0: 
          System.out.println("zero"); 
          break; 
        case 1: 
          System.out.println("one"); 
        case 2: 
          System.out.println("two"); 
      }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: default
      - id: bbb
        text: default, zero
      - id: ccc
        text: error default clause not defined 
      - id: ddd
        text: no output displayed
    correct: bbb

- kind: single_choice
  content: |
    当你试图准备编译，运行下面代码时会发生：
    ```java
      class Base {} 
      class Sub extends Base {} 
      class Sub2 extends Base {} 
      public class CEx{ 
        public static void main(String argv[]){ 
          Base b=new Base(); 
          Sub s=(Sub) b; 
        } 
      } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译和运行很正常
      - id: bbb
        text: 编译时错误
      - id: ccc
        text: 运行时错误
    correct: ccc

- kind: single_choice
  content: |
    当你试图准备编译，运行下面代码时会发生：
    ```java
    public class Tux extends Thread{ 
      static String sName = "vandeleur"; 
      public static void main(String argv[]){ 
        Tux t = new Tux(); 
        t.piggy(sName); 
        System.out.println(sName); 
      } 
      public void piggy(String sName){ 
        sName = sName + " wiggy"; 
        start(); 
      } 
      public void run(){ 
          for(int i=0;i < 4; i++){ 
          sName = sName + " " + i; 
        } 
      } 
    }
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译时错误
      - id: bbb
        text: 编译成功，并打印出"vandeleur wiggy"
      - id: ccc
        text: 编译成功，并打印出" vandeleur wiggy 0 1 2 3"
      - id: ddd
        text: 编译成功，并打印出" vandelur"
    correct: ddd

- kind: single_choice
  content: 在什么情况下类获得默认的构造方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 类被定义时
      - id: bbb
        text: 类中没有定义任何构造方法时
      - id: ccc
        text: 在类中至少定义了一个构造方法时
    correct: bbb

- kind: single_choice
  content: 假定有一个包含引起异常（不是一个RuntimeException）的代码的方法，用什么方式告诉方法的调用者要捕获该异常：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: throw Exception
      - id: bbb
        text: throws Exception
      - id: ccc
        text: new Exception
      - id: ddd
        text: 不用特别指定
    correct: bbb

- kind: single_choice
  content: 运行下面代码能够得出的结果？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: throw Exception
      - id: bbb
        text: throws Exception
      - id: ccc
        text: new Exception
      - id: ddd
        text: 不用特别指定
    correct: bbb

- kind: single_choice
  content: |
    ```java
      System.out.println(4 | 3);
    ```
    能打印出什么结果？
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 6
      - id: bbb
        text: 0
      - id: ccc
        text: 1
      - id: ddd
        text: 7
    correct: ddd

- kind: single_choice
  content: |
    传递4，0来运行下列代码中的方法divide(int a, int b)，结果是：
    ```java
      public void divide(int a, int b) { 
        try { 
          int c = a / b; 
         } catch (Exception e) { 
          System.out.print("Exception "); 
        } finally { 
          System.out.println("Finally"); 
      } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 打印输出: Exception Finally
      - id: bbb
        text: 打印输出: Finally
      - id: ccc
        text: 打印输出: Exception
      - id: ddd
        text: 没有任何输出
    correct: aaa

- kind: single_choice
  content: 对public void add(int a) {…}方法的重写方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 必须返回void
      - id: bbb
        text: 必须返回in
      - id: ccc
        text: 可以返回任何需要的类型
    correct: aaa

- kind: single_choice
  content: 对public void add(int a) {…}方法的重载方法应返回：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: void
      - id: bbb
        text: int
      - id: ccc
        text: 任何类型
    correct: ccc

- kind: single_choice
  content: |
    下列类分别在不同的文件中定义：
    ```java
    class Vehicle { 
      public void drive() { 
        System.out.println("Vehicle: drive"); 
      } 
    } 
    class Car extends Vehicle { 
      public void drive() { 
        System.out.println("Car: drive"); 
      } 
    } 

    public class Test { 
      public static void main (String args []) { 
        Vehicle v; 
        Car c; 
        v = new Vehicle(); 
        c = new Car(); 
        v.drive(); 
        c.drive(); 
        v = c; 
        v.drive(); 
      } 
    }
    ```
    编译和执行类Test后，结果是：
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 在语句v= c;处产生编译时错误
      - id: bbb
        text: 在语句v= c;处产生运行时错误
      - id: ccc
        text: 输出 Vehicle: drive Car: drive Car: drive
      - id: ddd
        text: 输出Vehicle: drive Car: drive Vehicle: drive
    correct: ccc

- kind: single_choice
  content: 在子类构造方法内的什么位置可以对超类的构造方法(super())进行调用：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 子类构造方法的任何地方
      - id: bbb
        text: 子类构造方法的第一条语句处
      - id: ccc
        text: 子类构造方法的最后一条语句处
      - id: ddd
        text: 不能对超类的构造方法进行调用
    correct: bbb

- kind: single_choice
  content: |
    下列代码中有明显的语法错误的语句是：
    ```java
    1. public class Test {  
    2.     public static void main (String args []) {  
    3.         Employee e = new Employee("Bob", 48);  
    4.         e.calculatePay();  
    5.         System.out.println(e.printDetails());  
    6.         e = Null;  
    7.         e = new Employee("Denise", 36);  
    8.         e.calculatePay();  
    9.         System.out.println(e.printDetails());  
    10.     }  
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: Line 10
      - id: bbb
        text: Line 11
      - id: ccc
        text: Line 6
      - id: ddd
        text: Line 8
    correct: ccc

- kind: single_choice
  content: |
    选择正确生成text field的代码，此text field最多能够显示10个字符（假定其字体
    有固定大小）并最初显示“hello”串：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: new TextField("hello", 10) ;
      - id: bbb
        text: new TextField(10,"hello");
      - id: ccc
        text: new TextField("hello",max,10);
      - id: ddd
        text: new TextField("hello",10,max);
    correct: aaa

- kind: single_choice
  content: |
    从下面的布局管理器中选择按行放置控件、从左到右、从上到下，当一行装满时开始新的一行的布局管理器：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: CardLayout
      - id: bbb
        text: FlowLayout
      - id: ccc
        text: BorderLayout
      - id: ddd
        text: GridLayout
    correct: bbb

- kind: single_choice
  content: 选择可以替换一个Container对象布局的方法:
  content_format: text
  answer:
    choices:
      - id: aaa
        text: setLayout(aLayoutManager);
      - id: bbb
        text: addLayout(aLayoutManager);
      - id: ccc
        text: layout(aLayoutManager);
      - id: ddd
        text: setLayoutManager(aLayoutManager);
    correct: aaa

- kind: single_choice
  content: |
    下面的代码编译，运行后得出的结果：
    ```java
    ublic class Conv{ 
      public static void main(String argv[]){ 
        Conv c=new Conv(); 
        String s=new String("ello"); 
        c.amethod(s); 
      } 
      public void amethod(String s){ 
        char c='H'; 
        c+=s; 
         System.out.println(c); 
      } 
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译成功，打印出 "Hello"
      - id: bbb
        text: 编译成功，打印出"ello"
      - id: ccc
        text: 编译成功，打印出elloH 
      - id: ddd
        text: 编译错误
    correct: ddd

- kind: single_choice
  content: |
    执行后打印的结果为：
    ```java
    public class Oct{ 
      public static void main(String argv[]){ 
        Oct o = new Oct(); 
        o.amethod(); 
      } 
      public void amethod(){ 
        int oi= 012; 
        System.out.println(oi); 
      } 
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 12
      - id: bbb
        text: 012
      - id: ccc
        text: 10
      - id: ddd
        text: 10.0
    correct: ccc

- kind: single_choice
  content: |
    编译，执行下面的代码会出现的结果：
    ```java
    public class Ref{ 
      public static void main(String argv[]){ 
        Ref r = new Ref(); 
        r.amethod(r); 
      } 
      public void amethod(Ref r){ 
        int i=99; 
        multi(r); 
        System.out.println(i); 
      } 
      public void multi(Ref r){ 
        r.i = r.i*2; 
      } 
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 一个编译时错误
      - id: bbb
        text: 99
      - id: ccc
        text: 198
      - id: ddd
        text: 一个运行时错误．
    correct: aaa

- kind: single_choice
  content: 现在你存储一个唯一的整型序列，那么你需要哪个容器接口？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Set
      - id: bbb
        text: List
      - id: ccc
        text: Map
      - id: ddd
        text: Vector
    correct: aaa

- kind: single_choice
  content: |
    ```java
    System.out.println(Math.floor(-2.1));
    ```
    打印的结果为：
  content_format: md
  answer:
    choices:
      - id: aaa
        text: -2
      - id: bbb
        text: 2.0
      - id: ccc
        text: -3
      - id: ddd
        text: -3.0
    correct: ddd

- kind: single_choice
  content: 下列说法哪一个是正确的。（ ）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Java程序经编译后会产生machine code
      - id: bbb
        text: Java程序经编译后会产生byte code
      - id: ccc
        text: Java程序经编译后会产生DLL
      - id: ddd
        text: 以上都不正确
    correct: bbb

- kind: single_choice
  content: 提供Java存取数据库能力的包是。（ ）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: java.sql
      - id: bbb
        text: java.awt
      - id: ccc
        text: java.lang
      - id: ddd
        text: java.swing
    correct: aaa

- kind: single_choice
  content: |
    执行如下程序代码后，C的值是。（ ）
    ```java
    a=0;c=0; 
    do{ 
      --c; 
      a=a-1; 
    }while(a>0);
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 0
      - id: bbb
        text: 1
      - id: ccc
        text: -1
      - id: ddd
        text: 死循环
    correct: ccc

- kind: single_choice
  content: 下面的语句中正确的表达式为。（ ）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: byte b = 128;
      - id: bbb
        text: boolean n = null;
      - id: ccc
        text: double d = 0.9239d;
      - id: ddd
        text: float f = 0.9239;
    correct: ccc

- kind: single_choice
  content: 将一个十六进制值赋给一个long型变量的正确写法为。（ ）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: long number = 345L;
      - id: bbb
        text: long number = 0345;
      - id: ccc
        text: long number = 0345L;
      - id: ddd
        text: long number = 0x345L;
    correct: ddd

- kind: single_choice
  content: |
    以下程序代码的输出是。（ ）
    ```java
    public class test (  
      public static void main (String args[]) (  
        System.out.printIn (6 ^ 3);  
      )  
    ) 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 3
      - id: bbb
        text: 5
      - id: ccc
        text: 6
      - id: ddd
        text: 11
    correct: ddd

- kind: single_choice
  content: |
    以下程序代码的输出是。（ ）
    ```java
    public class test (  
    private static int j = 0;   
      private static boolean methodB(int k) (  
    j += k;  
    return true;  
    )  
    public static void methodA(int i) {  
    boolean b:  
      b = i < 10 | methodB (4);  
      b = i < 10 || methodB (8);  
    )  
    public static void main (String args[] } (  
    methodA (0);  
    system.out.printIn(j);  
    )  
    )
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 0
      - id: bbb
        text: 4
      - id: ccc
        text: 8
      - id: ddd
        text: 12
      - id: eee
        text: 不能编译通过
    correct: eee

- kind: single_choice
  content: |
    以下程序代码的输出是。（ ）
    ```java
    public class test {  
    public static void add3 (Integer i) }  
    int val = i.intValue ( );  
    val += 3;  
    i = new Integer (val);  
    }  

    public static void main (String args [ ] ) {  
    Integer i = new Integer (0);  
     add3 (i);  
     system.out.printIn (i.intValue ( ) );  
     }  
     )
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 编译失败
      - id: bbb
        text: 编译成功但在第三行会出现异常
      - id: ccc
        text: 0
      - id: ddd
        text: 3
    correct: aaa

- kind: single_choice
  content: |
    以下程序代码执行后，哪个说法正确？（ ）
    ```java
    int index = 1;  md
    boolean[] test = new Boolean[3];  
    boolean foo= test [index]; 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 有异常抛出。
      - id: bbb
        text: 无法编译。
      - id: ccc
        text: foo的值是0。
      - id: ddd
        text: foo的值是null。
      - id: eee
        text: foo的值是true。
      - id: fff
        text: foo的值是false。
    correct: bbb

- kind: single_choice
  content: 以下哪个类是swt包中的。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: MessageBox
      - id: bbb
        text: MessageDialog
      - id: ccc
        text: JDialog
      - id: ddd
        text: DisplayMode
    correct: ddd

- kind: single_choice
  content: Java是从（）语言改进重新设计。
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Ada
      - id: bbb
        text: C++
      - id: ccc
        text: Pasacal
      - id: ddd
        text: BASIC
    correct: bbb

- kind: single_choice
  content: 下列语句哪一个正确（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Java程序经编译后会产生machine code
      - id: bbb
        text: Java程序经编译后会产生byte code
      - id: ccc
        text: Java程序经编译后会产生DLL 
      - id: ddd
        text: 以上都不正确 
    correct: bbb

- kind: single_choice
  content: 下列说法正确的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: class中的constructor不可省略
      - id: bbb
        text: constructor必须与class同名，但方法不能与class同名
      - id: ccc
        text: constructor在一个对象被new时执行
      - id: ddd
        text: 一个class只能定义一个constructor
    correct: ccc

- kind: single_choice
  content: 提供Java存取数据库能力的包是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: java.sql
      - id: bbb
        text: java.awt
      - id: ccc
        text: java.lang
      - id: ddd
        text: java.swing 
    correct: aaa

- kind: single_choice
  content: 下列运算符合法的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: &&
      - id: bbb
        text: <>
      - id: ccc
        text: if
      - id: ddd
        text: :=
    correct: aaa

- kind: single_choice
  content: |
    执行如下程序代码 
    ```java
    a=0;c=0; 
    do{ 
      --c; 
      a=a-1; 
    }while(a>0);
    ```
    后，C的值是（）
  content_format: md
  answer:
    choices:
      - id: aaa
        text: 0
      - id: bbb
        text: 1
      - id: ccc
        text: -1
      - id: ddd
        text: 死循环
    correct: ccc

- kind: single_choice
  content: 下列哪一种叙述是正确的（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: abstract修饰符可修饰字段、方法和类
      - id: bbb
        text: 抽象方法的body部分必须用一对大括号{ }包住
      - id: ccc
        text: 声明抽象方法，大括号可有可无
      - id: ddd
        text: 声明抽象方法不可写出大括号
    correct: ddd

- kind: single_choice
  content: 下列语句正确的是（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 形式参数可被视为local variable 
      - id: bbb
        text: 形式参数可被字段修饰符修饰
      - id: ccc
        text: 形式参数为方法被调用时，真正被传递的参数 
      - id: ddd
        text: 形式参数不可以是对象 
    correct: aaa

- kind: single_choice
  content: 下列哪种说法是正确的（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 实例方法可直接调用超类的实例方法 
      - id: bbb
        text: 实例方法可直接调用超类的类方法 
      - id: ccc
        text: 实例方法可直接调用其他类的实例方法
      - id: ddd
        text: 实例方法可直接调用本类的类方法 
    correct: ddd



# 多选题 
- kind: multi_choice
  content: 下列说法正确的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 环境变量可在编译source code时指定
      - id: bbb
        text: 在编译程序时，所能指定的环境变量不包括class path 
      - id: ccc
        text: javac一次可同时编译数个Java源文件
      - id: ddd
        text: javac.exe能指定编译结果要置于哪个目录（directory）
    corrects: 
      - bbb
      - ccc
      - ddd

- kind: multi_choice
  content: 下列标识符不合法的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: new
      - id: bbb
        text: 
      - id: ccc
        text: 1234
      - id: ddd
        text: car.taxi
    corrects: 
      - aaa
      - ccc
      - ddd

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 数组是一种对象 
      - id: bbb
        text: 数组属于一种原生类
      - id: ccc
        text: int number=[]={31,23,33,43,35,63} 
      - id: ddd
        text: 数组的大小可以任意改变
    corrects: 
      - bbb
      - ccc
      - ddd

- kind: multi_choice
  content: 不能用来修饰interface的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: private
      - id: bbb
        text: public
      - id: ccc
        text: protected
      - id: ddd
        text: static
    corrects: 
      - aaa
      - ccc
      - ddd

- kind: multi_choice
  content: 下列正确的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: call by value不会改变实际参数的数值
      - id: bbb
        text: call by reference能改变实际参数的参考地址
      - id: ccc
        text: call by reference不能改变实际参数的参考地址
      - id: ddd
        text: call by reference能改变实际参数的内容 
    corrects: 
      - aaa
      - ccc
      - ddd

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 在类方法中可用this来调用本类的类方法 
      - id: bbb
        text: 在类方法中调用本类的类方法时可直接调用
      - id: ccc
        text: 在类方法中只能调用本类中的类方法 
      - id: ddd
        text: 在类方法中绝对不能调用实例方法 
    corrects: 
      - aaa
      - ccc
      - ddd

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Java面向对象语言容许单独的过程与函数存在
      - id: bbb
        text: Java面向对象语言容许单独的方法存在 
      - id: ccc
        text: Java语言中的方法属于类中的成员（member） 
      - id: ddd
        text: Java语言中的方法必定隶属于某一类（对象），调用方法与过程或函数相同
    corrects: 
      - aaa
      - bbb
      - ccc

- kind: multi_choice
  content: 下列说法错误的有（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 能被java.exe成功运行的java class文件必须有main()方法
      - id: bbb
        text: J2SDK就是Java API 
      - id: ccc
        text: Appletviewer.exe可利用jar选项运行.jar文件 
      - id: ddd
        text: 能被Appletviewer成功运行的java class文件必须有main()方法
    corrects: 
      - bbb
      - ccc
      - ddd

- kind: multi_choice
  content: 在下面的选项中合法的标识符有。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: _ok
      - id: bbb
        text: *point
      - id: ccc
        text: this
      - id: ddd
        text: $byte
      - id: eee
        text: const
      - id: fff
        text: ILikeJLCSS
    corrects: 
      - aaa
      - ddd
      - eee
      - fff

- kind: multi_choice
  content: 下面的选项中哪些不是java的关键字。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: TRUE
      - id: bbb
        text: sizeof
      - id: ccc
        text: goto
      - id: ddd
        text: const
      - id: eee
        text: super
      - id: fff
        text: void
    corrects: 
      - aaa
      - bbb
      - ddd

- kind: multi_choice
  content: 下面的叙述中正确的有。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 环境变量可在编译source code时指定。
      - id: bbb
        text: 在编译程序时，所能指定的环境变量不包括class path。
      - id: ccc
        text: javac一次可同时编译数个Java源文件。
      - id: ddd
        text: javac.exe能指定编译结果要置于哪个目录（directory）。
    corrects: 
      - aaa
      - ccc

- kind: multi_choice
  content: 下面的叙述中正确的有。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: equals()方法判定引用值是否指向同一对象。
      - id: bbb
        text: = = 操作符判定两个分立的对象的内容和类型是否一致。 
      - id: ccc
        text: equals()方法只有在两个对象的内容一致时返回true。 
      - id: ddd
        text: 类File重写方法equals()在两个分立的对象的内容和类型一致时返回true。
    corrects:
      - ccc

- kind: multi_choice
  content: 下面有关变量及其作用域的陈述哪些是对的。（）
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 在方法里面定义的局部变量在方法退出的时候被撤销。 
      - id: bbb
        text: 局部变量也叫自动变量。 
      - id: ccc
        text: 在方法外面定义的变量（译注：即实例变量）在对象被构造时创建。
      - id: ddd
        text: 在方法中定义的方法的参变量只要该对象被需要就一直存在。
    corrects:
      - aaa
      - ccc

- kind: multi_choice
  content: |
    一个类Example的main()方法的参数是args,类被如下调用执行： 
    java Example cat 
    main方法中访问args[0]的输出是什么？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: cat
      - id: bbb
        text: java
      - id: ccc
        text: Example
      - id: ddd
        text: 抛出一个NullPointerException异常
      - id: eee
        text: 抛出一个ArrayIndexOutOfBoundsException异常
    corrects: 
      - aaa

- kind: multi_choice
  content: |
    给出下列代码，请选择2个正确输出？
    ```java
    public class Example{ 
      public static void main(String args[]){ 
        int i=0; 
        do{ 
          System.out.println(“Doing it for i is”+i); 
        } 
        while (--i>0); 
          System.out.println(“Finished”); 
      } 
    } 
    ```
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Doing it for i is 3
      - id: bbb
        text: Doing it for i is 2
      - id: ccc
        text: Doing it for i is 1
      - id: ddd
        text: Doing it for i is 0
      - id: eee
        text: Finished
    corrects: 
      - ddd
      - eee

- kind: multi_choice
  content: 选择定义在Graphics类中的方法：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: drawLine(int, int, int, int) ;
      - id: bbb
        text: drawImage(Image, int, int, ImageObserver) ;
      - id: ccc
        text: drawString(String, int, int) ;
      - id: ddd
        text: add(Component);
      - id: eee
        text: setVisible(boolean);
      - id: fff
        text: setLayout(Object);
    corrects: 
      - aaa
      - ccc

- kind: multi_choice
  content: 选择可以建立线程的接口：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: Runnable
      - id: bbb
        text: Run
      - id: ccc
        text: 少数用于管理的系统部件
      - id: ddd
        text: Thread
      - id: eee
        text: Executable
    corrects: 
      - aaa

- kind: multi_choice
  content: |
    下面定义的变量能执行那些操作？
    ```java
    String s1=new String("Hello") 
    String s2=new String("there"); 
    String s3=new String();
    ```
  content_format: text
  answer:
    choices:
      - id: aaa
        text: s3=s1 + s2;
      - id: bbb
        text: s3=s1-s2;
      - id: ccc
        text: s3=s1 & s2;
      - id: ddd
        text: s3=s1 && s2
    corrects:
      - aaa

- kind: multi_choice
  content: |
    下面的代码能打印出的结果是：
    ```java
      public class MyFor{ 
    public static void main(String argv[]){ 
    int i; 
    int j; 
    outer: 
    for (i=1;i <3;i++) 
    inner: 
    for(j=1; j<3; j++) { 
    if (j==2) 
    continue outer; 
    System.out.println("Value for i=" + i + " Value for j=" +j); 
    } 
    } 
    } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: Value for i=1 value for j=1
      - id: bbb
        text: Value for i=2 value for j=1
      - id: ccc
        text: Value for i=2 value for j=2
      - id: ddd
        text: Value for i=3 value for j=1
    corrects:
      - aaa
      - bbb

- kind: multi_choice
  content: |
    那个代码能够添加在//mothod here地方，并能正确执行？
    ```java
      class Base{ 
        public void amethod(int i) { } 
      } 
      public class Scope extends Base{ 
        public static void main(String argv[]){ 
        } 
        //Method Here 
      } 
    ```
  content_format: md
  answer:
    choices:
      - id: aaa
        text: void amethod(int i) throws Exception {}
      - id: bbb
        text: void amethod(long i)throws Exception {}
      - id: ccc
        text: void amethod(long i){}
      - id: ddd
        text: public void amethod(int i) throws Exception {}
    corrects:
      - bbb
      - ccc

- kind: multi_choice
  content: 下列哪些表达式返回true
  content_format: text
  answer:
    choices:
      - id: aaa
        text: "john" == "john"
      - id: bbb
        text: "john".equals("john")
      - id: ccc
        text: "john" = "john"
      - id: ddd
        text: "john".equals(new Button("john"))
    corrects:
      - aaa
      - bbb

- kind: multi_choice
  content: listener(监听器)方法的正确的访问修饰符是什么？
  content_format: text
  answer:
    choices:
      - id: aaa
        text: public
      - id: bbb
        text: static
      - id: ccc
        text: private
      - id: ddd
        text: protected
      - id: eee
        text: Default(即默认为空)
    corrects:
      - aaa

- kind: multi_choice
  content: public static void main方法的参数描述是：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: String args[] 
      - id: bbb
        text: Strings args[]
      - id: ccc
        text: String args
      - id: ddd
        text: String []args
    corrects:
      - aaa
      - ddd

- kind: multi_choice
  content: 下面哪行代码会在编译的时候出现错误或警告：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: float f=1.3;
      - id: bbb
        text: char c="a";
      - id: ccc
        text: byte b=257;
      - id: ddd
        text: boolean b=null;
      - id: eee
        text: int i=10;
    corrects:
      - aaa
      - bbb
      - ccc
      - ddd

- kind: multi_choice
  content: 下面那些关键字不是JAVA的关键字
  content_format: text
  answer:
    choices:
      - id: aaa
        text: if
      - id: bbb
        text: then
      - id: ccc
        text: goto
      - id: ddd
        text: while
      - id: eee
        text: case
    corrects: 
      -bbb

- kind: multi_choice
  content: 下面那些不是合法的变量定义：
  content_format: text
  answer:
    choices:
      - id: aaa
        text: 2variable
      - id: bbb
        text: variable2
      - id: ccc
        text: _whatavariable
      - id: ddd
        text: _3_
      - id: eee
        text: 
      - id: fff
        text: "#myvar"
    correct: 
      - aaa
      - fff

# 简答题
- kind: essay
  content: 请写出一个输出“Hello World！” 的程序。（3分） 
  content_format: text

- kind: essay
  content: char型变量中能不能存贮一个中文汉字? 为什么? （3分） 
  content_format: text

- kind: essay
  content: 常见的两种xml解析技术是什么? 区别是什么?（4分）
  content_format: text

- kind: essay
  content: MVC是什么，如何实现? （5分）
  content_format: text

- kind: essay
  content: J2EE是什么？（6分） 
  content_format: text

- kind: essay
  content: jsp有哪些内置对象?作用分别是什么? （9分）
  content_format: text

- kind: essay
  content: 作用域public,private,protected,以及不写时的区别 ？（10分）
  content_format: text

- kind: essay
  content: |
    什么是Singleton，它的作用是什么，它有几种形式？请用代码写出一个Singleton类。 
  content_format: text

- kind: essay
  content: |
    在Struts + Spring + Hibernate的组合框架模式中，三者各自的特点都是什么？
  content_format: text

- kind: essay
  content: 分别写出BOOL,int,float,指针类型的变量a 与“零”的比较语句
  content_format: text

- kind: essay
  content: 请说出const与#define 相比，有何优点？
  content_format: text

- kind: essay
  content: 简述数组与指针的区别？
  content_format: text

- kind: essay
  content: 类成员函数的重载、、覆盖和隐藏区别？
  content_format: text

- kind: essay
  content: |
    There are two int variables: a and b, don’t use “if”, “? :”, “switch”or other judgement statements, find out the biggest one of the two numbers.
  content_format: text

- kind: essay
  content: 如何打印出当前源文件的文件名以及源文件的当前行号？
  content_format: text

- kind: essay
  content: main 主函数执行完毕后，是否可能会再执行一段代码，给出说明？  
  content_format: text

- kind: essay
  content: 如何判断一段程序是由C 编译程序还是由C++编译程序编译的？  
  content_format: text

- kind: essay
  content: 文件中有一组整数，要求排序后输出到另一个文件中 
  content_format: text

  - kind: essay
    content: 链表题：一个链表的结点结构
    content_format: text